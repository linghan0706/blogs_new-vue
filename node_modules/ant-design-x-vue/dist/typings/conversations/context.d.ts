import type { ComputedRef } from "vue";
import type { GroupTitleContextProps } from './interface';
export declare const globalGroupTitleContextApi: import("vue").ShallowRef<GroupTitleContextProps, GroupTitleContextProps>;
export declare const useGroupTitleContextProvider: (value: ComputedRef<GroupTitleContextProps>) => void;
export declare const useGroupTitleContextInject: () => ComputedRef<GroupTitleContextProps>;
export declare const GroupTitleContextProvider: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    value: {
        type: import("vue").PropType<GroupTitleContextProps>;
        default: GroupTitleContextProps;
    };
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    value: {
        type: import("vue").PropType<GroupTitleContextProps>;
        default: GroupTitleContextProps;
    };
}>> & Readonly<{}>, {
    value: GroupTitleContextProps;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default GroupTitleContextProvider;
