import type { ComponentTokenMap } from './components';
import type { AliasToken } from './cssinjs-utils';
export declare const genStyleHooks: <C extends keyof ComponentTokenMap>(component: C | [C, string], styleFn: import("../_util/cssinjs-utils").GenStyleFn<ComponentTokenMap, AliasToken, C>, getDefaultToken?: import("../_util/cssinjs-utils").GetDefaultToken<ComponentTokenMap, AliasToken, C>, options?: {
    resetStyle?: boolean;
    resetFont?: boolean;
    deprecatedTokens?: [keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>, keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>][];
    unitless?: Partial<Record<keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>, boolean>>;
    clientOnly?: boolean;
    order?: number;
    injectStyle?: boolean;
}) => (prefixCls: import("vue").MaybeRefOrGetter<string>, rootCls?: string) => readonly [(node: import("vue").VNode) => import("vue").VNode, import("vue").Ref<string, string>, string], genComponentStyleHook: <C extends keyof ComponentTokenMap>(componentName: C | [C, string], styleFn: import("../_util/cssinjs-utils").GenStyleFn<ComponentTokenMap, AliasToken, C>, getDefaultToken?: import("../_util/cssinjs-utils").GetDefaultToken<ComponentTokenMap, AliasToken, C>, options?: {
    resetStyle?: boolean;
    resetFont?: boolean;
    deprecatedTokens?: [keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>, keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>][];
    clientOnly?: boolean;
    order?: number;
    injectStyle?: boolean;
    unitless?: Partial<Record<keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>, boolean>>;
}) => (prefixCls: string, rootCls?: string) => import("../_util/cssinjs-utils/interface").UseComponentStyleResult, genSubStyleComponent: <C extends keyof ComponentTokenMap>(componentName: C | [C, string], styleFn: import("../_util/cssinjs-utils").GenStyleFn<ComponentTokenMap, AliasToken, C>, getDefaultToken?: import("../_util/cssinjs-utils").GetDefaultToken<ComponentTokenMap, AliasToken, C>, options?: {
    resetStyle?: boolean;
    resetFont?: boolean;
    deprecatedTokens?: [keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>, keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>][];
    clientOnly?: boolean;
    order?: number;
    injectStyle?: boolean;
    unitless?: Partial<Record<keyof Exclude<import("../_util/cssinjs-utils").OverrideTokenMap<ComponentTokenMap, AliasToken>[C], undefined>, boolean>>;
}) => any;
