import type { MaybeRefOrGetter, Ref } from "vue";
export type CollapsibleOptions = {
    /**
     * @desc 当前展开的节点
     * @descEN current expanded keys
     */
    expandedKeys?: string[];
    /**
     * @desc 展开节点变化回调
     * @descEN callback when expanded keys change
     */
    onExpand?: (expandedKeys: string[]) => void;
};
export type Collapsible = boolean | CollapsibleOptions;
type RequiredCollapsibleOptions = Required<CollapsibleOptions>;
type UseCollapsible = (collapsible?: MaybeRefOrGetter<Collapsible>, prefixCls?: string, rootPrefixCls?: string) => [
    Ref<boolean>,
    Ref<RequiredCollapsibleOptions['expandedKeys']>,
    ((curKey: string) => void) | undefined
];
declare const useCollapsible: UseCollapsible;
export default useCollapsible;
