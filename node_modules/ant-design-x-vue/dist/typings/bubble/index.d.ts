import BubbleList from './BubbleList.vue';
export type { BubbleProps, BubbleListProps } from './interface';
declare const Bubble: {
    new (...args: any[]): import("vue").CreateComponentPublicInstanceWithMixins<Readonly<import("./interface").BubbleProps> & Readonly<{}>, {
        nativeElement: import("vue").Ref<HTMLDivElement, HTMLDivElement>;
    }, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").PublicProps, {}, true, {}, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, {}, any, import("vue").ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("./interface").BubbleProps> & Readonly<{}>, {
        nativeElement: import("vue").Ref<HTMLDivElement, HTMLDivElement>;
    }, {}, {}, {}, {}>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("./interface").BubbleProps> & Readonly<{}>, {
    nativeElement: import("vue").Ref<HTMLDivElement, HTMLDivElement>;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {}, {}, string, {}, import("vue").GlobalComponents, import("vue").GlobalDirectives, string, import("vue").ComponentProvideOptions> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: Readonly<{
        avatar?(): import("vue").VNode;
        header?(): import("vue").VNode | string;
        footer?(): import("vue").VNode | string;
        loading?(): import("vue").VNode;
        message?(props?: {
            content: string;
        }): import("vue").VNode | string;
    }> & {
        avatar?(): import("vue").VNode;
        header?(): import("vue").VNode | string;
        footer?(): import("vue").VNode | string;
        loading?(): import("vue").VNode;
        message?(props?: {
            content: string;
        }): import("vue").VNode | string;
    };
}) & {
    List: import("vue").DefineComponent<import("./interface").BubbleListProps, {
        nativeElement: import("vue").Ref<HTMLDivElement, HTMLDivElement>;
        scrollTo: ({ key, offset, behavior, block }: {
            offset?: number;
            key?: string | number;
            behavior?: ScrollBehavior;
            block?: ScrollLogicalPosition;
        }) => void;
    }, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("./interface").BubbleListProps> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
};
export default Bubble;
export { Bubble, BubbleList };
