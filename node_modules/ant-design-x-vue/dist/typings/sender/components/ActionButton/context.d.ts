import type { ComputedRef } from "vue";
import type { ActionButtonContextProps } from "../../interface";
export declare const globalActionButtonContextApi: import("vue").ShallowRef<ActionButtonContextProps, ActionButtonContextProps>;
export declare const useActionButtonContextProvider: (value: ComputedRef<ActionButtonContextProps>) => void;
export declare const useActionButtonContextInject: () => ComputedRef<ActionButtonContextProps>;
export declare const ActionButtonContextProvider: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    value: {
        type: import("vue").PropType<ActionButtonContextProps>;
        default: ActionButtonContextProps;
    };
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    value: {
        type: import("vue").PropType<ActionButtonContextProps>;
        default: ActionButtonContextProps;
    };
}>> & Readonly<{}>, {
    value: ActionButtonContextProps;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default ActionButtonContextProvider;
